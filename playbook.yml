---
- name: install node-exporter
  hosts: localhost
  vars:
    version: 1.7.0      # версия node-exporter, можно поменять на другую

  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker


    - name: Get architecture and save it in new variable
      shell: dpkg --print-architecture                # вывести архитектуру ПК
      register: architecture

    - set_fact: arch={{ architecture.stdout }}

    - name: Apply new variable of url to download
      set_fact: url_of_release="https://github.com/prometheus/node_exporter/releases/download/v{{ version }}/node_exporter-{{ version }}.linux-{{ arch }}.tar.gz"

    - name: Apply new variable of path to tar-file
      set_fact: path_to_tar_file="/home/vagrant/node_exporter-{{ version }}.linux-{{ arch }}.tar.gz"

    - name: Apply new variable of path to node_exporter
      set_fact: path_to_node_exporter_file="/home/vagrant/node_exporter-{{ version }}.linux-{{ arch }}/node_exporter"

    - name: Download and run node-exporter
      ansible.builtin.get_url:
        url: "{{ url_of_release }}"
        dest: /home/vagrant

    - name: Create node_exporter folder
      ansible.builtin.file:
        path: /home/vagrant/node_exporter
        state: directory

    - name: Decompress tar file to folder
      ansible.builtin.unarchive:
        src: "{{ path_to_tar_file }}"
        dest: /home/vagrant

    - name: Copy node_exporter binary to /usr/local/bin
      copy:
        src: "{{ path_to_node_exporter_file }}"
        dest: /usr/local/bin/node_exporter
        mode: '0755'
      become: yes

    - name: Copy systemd unit file to systemd folder
      copy:
        src: /home/vagrant/node_exporter.service
        dest: /etc/systemd/system/node_exporter.service
      become: yes

    - name: Restart node_exporter.service
      systemd:
        name: node_exporter.service
        state: restarted
      become: yes

#    - name: Install python3-pip
#      apt:
#        name: python3-pip
#        state: latest
#      become: yes
#
#    - name: upgrade docker-py
#      shell: pip install --upgrade docker-py
#
#    - name: Install docker-module for docker network creation
#      ansible.builtin.pip:
#        name: docker
#      become: yes
#
#    - name: Install python dependencies
#      ansible.builtin.pip:
#        name: requests==2.28.1
#      become: yes

    - name: Create docker network
      community.docker.docker_network:
        name: new-net
        driver_options:
          com.docker.network.bridge.name: br-new-net

#    - name: Install docker-compose module
#      ansible.builtin.pip:
#        name: docker-compose
#      become: yes


    - name: Gathering facts
      setup:

    - name: Copy Jinja template to prometheus configuration
      template:
        src: /home/vagrant/prometheus.j2
        dest: /home/vagrant/prometheus/prometheus.yml

    - name: Start docker compose with Prometheus and Grafana
      community.docker.docker_compose:
#      docker_compose:
        project_src: .
        state: present
